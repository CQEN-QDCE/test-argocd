##
##
## This file is intended to be a base for your deployKF values.
## You may either copy and modify it, or include it as a base before your own overrides.
## For an example of overrides, see the 'sample-values-overrides.yaml' in the main repo.
##
## Differences from 'default_values.yaml':
##  - all tools are enabled
##  - secrets are randomly generated at install
##
## Notes:
##  - YAML maps are RECURSIVELY merged across values files
##  - YAML lists are REPLACED in their entirety across values files
##  - Do NOT include empty/null sections, as this will remove ALL values from that section.
##    To include a section without overriding any values, set it to an empty map: `{}`
##  - We don't show all sections/values, only those which are commonly overridden.
##    The full list is available at https://www.deploykf.org/reference/deploykf-values/
##
##

## --------------------------------------------------------------------------------
##
##                                      argocd
##
## --------------------------------------------------------------------------------
argocd:

  ## a prefix to use for argocd application names
  ##  - allows a single instance of argocd to manage deployKF across multiple clusters
  ##  - if non-empty, `argocd.destination` must be a remote cluster, this is because
  ##    a single cluster can only have one instance of deployKF
  ##
  appNamePrefix: ""

  ## the namespace in which argocd is deployed
  ##
  namespace: argocd

  ## the project used for deployKF argocd applications
  ##
  project: default

  ## the source used for deployKF argocd applications
  ##
  source:

    ## configs specifying the git repo which contains your generated manifests
    ##
    repo:
      ## the URL of your manifest git repo
      ##  - for example, if you are using a GitHub repo named 'deployKF/examples', you might set this value
      ##    to "https://github.com/deployKF/examples" or "git@github.com:deployKF/examples.git"
      ##
      url: "https://github.com/CQEN-QDCE/deployKF-argocd"

      ## the git revision which contains your generated manifests
      ##  - for example, if you are using the 'main' branch of your repo, you might set this value to "main"
      ##
      revision: "main"

      ## the path within your repo where the generated manifests are stored
      ##  - for example, if you are using a folder named 'GENERATOR_OUTPUT' at the root of your repo,
      ##    you might set this value to "./GENERATOR_OUTPUT/"
      ##
      path: "./GENERATOR_OUTPUT/"

  ## the destination used for deployKF argocd applications
  ##  - the value of `destination.name` takes precedence over `destination.server`
  ##
  destination:
    server: https://kubernetes.default.svc
    name: ""


## --------------------------------------------------------------------------------
##
##                              deploykf-dependencies
##
## --------------------------------------------------------------------------------
deploykf_dependencies:

  ## --------------------------------------
  ##             cert-manager
  ## --------------------------------------
  cert_manager:
    enabled: true
    namespace: cert-manager

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## istio gateway certificate issuer configs
    ##  - if you wish to use your own ClusterIssuer, set `clusterIssuer.enabled` to false
    ##    and set `clusterIssuer.issuerName` to the name of your issuer, (this still works when you
    ##    bring your own cert-manager deployment by setting `cert_manager.enabled` to false)
    ##
    clusterIssuer:
      enabled: true
      issuerName: deploykf-gateway-issuer


  ## --------------------------------------
  ##                 istio
  ## --------------------------------------
  istio:
    enabled: true
    namespace: istio-system


  ## --------------------------------------
  ##                kyverno
  ## --------------------------------------
  kyverno:
    enabled: true
    namespace: kyverno


## --------------------------------------------------------------------------------
##
##                                  deploykf-core
##
## --------------------------------------------------------------------------------
deploykf_core:

  ## --------------------------------------
  ##             deploykf-auth
  ## --------------------------------------
  deploykf_auth:
    namespace: deploykf-auth
    ## dex configs
    ##
    dex:

      ## dex connectors
      ##  - dex connectors which allow bridging trust to external identity providers
      ##    https://dexidp.io/docs/connectors/
      ##  - not all connector types support refresh tokens, notably "SAML 2.0" and "OAUTH 2.0" do not
      ##    however, most providers support "OpenID Connect" which does support refresh tokens
      ##    without refresh tokens, users will be forced to re-authenticate every `expiry.idToken` period
      ##  - each element is a map with keys `type`, `id`, `name`, and `config` (which are the same aas upstream dex)
      ##    additionally, `configExistingSecret` and `configExistingSecretKey` allow you to set `config`
      ##    from a YAML-formatted string in a kubernetes secret
      ##  - in most cases `config.redirectURI` will be set to "https://{DEPLOYKF_HOST}/dex/callback" (if port is 443)
      ##
      connectors:
        - type: oidc
          id: keycloak
          name: Keycloak
          configExistingSecret: "my-secret-name"
          configExistingSecretKey: "keycloak-config"
          config:
            ## openid scopes to request
            scopes:
              - openid
              - email
              - profile
              ## NOTE: offline_access is required for refresh tokens
              - offline_access

            ## keycloak does not always send the `email_verified` claim
            insecureSkipEmailVerified: true

      ## dex OpenID Connect clients
      ##
      clients:

        ## OpenID client for oauth2-proxy (deployKF Dashboard)
        oauth2Proxy:
          clientId: "oauth2-proxy"
          clientSecret:
            existingSecret: "generated--dex-oauth2-proxy-client"
            existingSecretKey: "client_secret"
            generateSecret: true

        ## OpenID client for Minio Console
        minioConsole:
          clientId: "minio-console"
          clientSecret:
            existingSecret: "generated--dex-minio-console-client"
            existingSecretKey: "client_secret"
            generateSecret: true

        ## OpenID client for Argo Server
        argoServer:
          clientId: "argo-server"
          clientSecret:
            existingSecret: "generated--dex-argo-server-client"
            existingSecretKey: "client_secret"
            generateSecret: true

    ## oauth2-proxy configs
    ##
    oauth2Proxy:

      ## oauth2-proxy cookie configs
      ##
      cookie:
        secret:
          existingSecret: "generated--oauth2-proxy-cookie-secret"
          existingSecretKey: "cookie_secret"
          generateSecret: true


  ## --------------------------------------
  ##          deploykf-dashboard
  ## --------------------------------------
  deploykf_dashboard:
    namespace: deploykf-dashboard


  ## --------------------------------------
  ##        deploykf-istio-gateway
  ## --------------------------------------
  deploykf_istio_gateway:
    namespace: deploykf-istio-gateway

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests:
      - |
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: deploykf-gateway
          namespace: deploykf-istio-gateway
          annotations:
            alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:ca-central-1:131485263174:certificate/4995f314-12a0-4c95-8dc7-803c0f881b9d'
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
            alb.ingress.kubernetes.io/ssl-redirect: "443"
            alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.drop_invalid_header_fields.enabled=true
            alb.ingress.kubernetes.io/scheme: internal
            alb.ingress.kubernetes.io/target-type: ip
            alb.ingress.kubernetes.io/backend-protocol: HTTPS
            alb.ingress.kubernetes.io/healthcheck-port: "status-port"
            alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
            alb.ingress.kubernetes.io/healthcheck-path: "/healthz/ready"
            alb.ingress.kubernetes.io/subnets: 'subnet-09190b7878dc70cb5, subnet-0a13c0d5b26348f47'
        spec:
          ingressClassName: alb              
          rules:
            - host: "kubeflow-test.asea.cqen.ca"
              http:
                paths:
                  - path: "/"
                    pathType: Prefix
                    backend:
                      service:
                        name: "deploykf-gateway"
                        port:
                          name: https
            - host: "*.kubeflow-test.asea.cqen.ca"
              http:
                paths:
                  - path: "/"
                    pathType: Prefix
                    backend:
                      service:
                        name: "deploykf-gateway"
                        port:
                          name: https

    ## istio gateway configs
    ##
    gateway:
      hostname: kubeflow-test.asea.cqen.ca
      ## the hostname that the gateway will listen on
      ##  - subdomains of this hostname may also be used, depending on which apps are enabled
      ##
      ## the ports that the gateway will listen on
      ##  - these are the "internal" ports which the gateway use, and can be different
      ##    to the user-facing ports which the service listens on, see `gatewayService.ports`
      ##
      ports:
        http: 80
        https: 443

      ## these values configure TLS
      ##
      tls:
        ## ALB does NOT forward the SNI after TLS termination, 
        ## so we must disable SNI matching in the gateway
        matchSNI: false
      ## the pod labels used by the gateway to find the ingress gateway deployment
      ##
      selectorLabels:
        app: deploykf-gateway
        istio: deploykf-gateway

    ## istio gateway deployment configs
    ##
    gatewayDeployment:
      serviceAccount:
        name: deploykf-gateway
        annotations: {}

    ## istio gateway service configs
    ##
    gatewayService:
      name: "deploykf-gateway"
      ## WARNING: must be "NodePort" if "alb.ingress.kubernetes.io/target-type" is "instance"
      type: "ClusterIP"
      annotations: {}


  ## --------------------------------------
  ##      deploykf-profiles-generator
  ## --------------------------------------
  deploykf_profiles_generator:

    ## profile defaults
    ##
    profileDefaults:        

      ## a common prefix to add to all profile names
      ##
      profileNamePrefix: ""

      ## the default access for members of profiles, when not explicitly specified
      ##  - `role`: the Kubernetes RBAC role to bind to the user in the profile namespace
      ##      - "edit": binds "ClusterRole/kubeflow-edit" (can view/create/delete resources)
      ##      - "view": binds "ClusterRole/kubeflow-view" (cam view resources)
      ##  - `notebooksAccess`: if the user can ~connect~ to kubeflow notebooks in the profile
      ##                       note, the ability to create/delete notebook resources is controlled by `role`
      ##
      memberAccess:
        role: view
        notebooksAccess: false

      ## the default list of plugins for profiles, when not explicitly specified
      ##  - each entry is a map with the following keys:
      ##     - `kind`: the kind of plugin
      ##         - "AwsIamForServiceAccount": manages AWS IRSA for the profile namespace
      ##         - "WorkloadIdentity": manages GCP WorkloadIdentity for the profile namespace
      ##     - `spec`: a map of plugin-specific configurations
      ##         - spec for AwsIamForServiceAccount:
      ##           https://github.com/kubeflow/kubeflow/blob/v1.7.0/components/profile-controller/controllers/plugin_iam.go#L30
      ##         - spec for WorkloadIdentity:
      ##           https://github.com/kubeflow/kubeflow/blob/v1.7.0/components/profile-controller/controllers/plugin_workload_identity.go#L39
      ##  - override these defaults for a specific profile by setting `plugins` in that profile,
      ##    to disable all plugins for that profile, set an empty list `[]`
      ##
      plugins: {}

      ## the default resource quota for profiles, when not explicitly specified
      ##  - spec for ResourceQuotaSpec:
      ##    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#resourcequotaspec-v1-core
      ##  - override these defaults for a specific profile by setting `resourceQuotaSpec` in that profile,
      ##    to disable resource quotas for that profile, set an empty map `{}`
      ##
      resourceQuotaSpec: {}

      ## the default tool configs for profiles
      ##
      tools:

        ## the default Kubeflow Pipelines configs for profiles
        ##
        kubeflowPipelines: {}
    
    


## --------------------------------------------------------------------------------
##
##                                   deploykf-opt
##
## --------------------------------------------------------------------------------
deploykf_opt:

  ## --------------------------------------
  ##            deploykf-minio
  ## --------------------------------------
  deploykf_minio:
    enabled: false
    namespace: deploykf-minio

  ## --------------------------------------
  ##            deploykf-mysql
  ## --------------------------------------
  deploykf_mysql:
    enabled: true
    namespace: deploykf-mysql
    persistence:
      storageClass: "gp2"

    ## configs for the "root@localhost" mysql user
    ##  - these credentials are used by the liveness probes
    ##  - as this is "root@localhost", these credentials can only be used from within the pod
    ##
    rootUser:
      existingSecret: "generated--deploykf-mysql-root-user"
      generateSecret: true

    ## configs for the kubeflow mysql user
    ##  - if a Kubeflow app requires MySQL and is not configured to use an external database,
    ##    it will use these credentials
    ##
    kubeflowUser:
      existingSecret: "generated--deploykf-mysql-kubeflow-user"
      generateSecret: true


## --------------------------------------------------------------------------------
##
##                              kubeflow-dependencies
##
## --------------------------------------------------------------------------------
kubeflow_dependencies:

  ## --------------------------------------
  ##        kubeflow-argo-w   orkflows
  ## --------------------------------------
  kubeflow_argo_workflows:
    enabled: true
    #namespace: kubeflow
    controller:
      serviceAccount:
        annotations:
          eks.amazonaws.com/role-arn: "arn:aws:iam::131485263174:role/kubeflow-pipelines-backend"
    server:
      serviceAccount:
        annotations:
          eks.amazonaws.com/role-arn: "arn:aws:iam::131485263174:role/kubeflow-pipelines-backend"


## --------------------------------------------------------------------------------
##
##                                  kubeflow-tools
##
## --------------------------------------------------------------------------------
kubeflow_tools:

  ## --------------------------------------
  ##                 katib
  ## --------------------------------------
  katib:
    enabled: true

    ## mysql connection configs
    ##  - if `useExternal` is true, katib will use the specified external mysql database
    ##  - if `useExternal` is false, katib will use the embedded `deploykf_opt.deploykf_mysql` database,
    ##    and all other configs will be ignored
    ##
    mysql:
      useExternal: false
    ## mysql database name
    ##
    mysqlDatabase: katib


  ## --------------------------------------
  ##               notebooks
  ## --------------------------------------
  notebooks:
    enabled: true

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    extraManifests: []

    ## image overrides
    ##
    images:
      jupyterWebApp:
        repository: docker.io/kubeflownotebookswg/jupyter-web-app
        tag: ~

      notebookController:
        repository: docker.io/kubeflownotebookswg/notebook-controller
        tag: ~

    ## notebook spawner configs
    ##  - these configs directly become the `spawner_ui_config.yaml` in the jupyter-web-app
    ##  - about the `readOnly` configs:
    ##     - when `readOnly` is set to true, the option will be disabled for users
    ##     - when 'readOnly' is missing, it defaults to 'false'
    ##
    spawnerFormDefaults:

      ## if users can input custom images, or only select from dropdowns
      allowCustomImage: true

      ## if the registry of the container image is hidden from display
      hideRegistry: true

      ## if the tag of the container image is hidden from display
      hideTag: false

      ## configs for the ImagePullPolicy
      imagePullPolicy:
        readOnly: false

        ## the default ImagePullPolicy
        ## (possible values: "Always", "IfNotPresent", "Never")
        value: IfNotPresent

      ## Jupyter-like Container Images
      ##  - the `image` section is used for "Jupyter-like" apps whose
      ##    HTTP path is configured by the "NB_PREFIX" environment variable
      ##
      image:
        ## the default container image
        value: kubeflownotebookswg/jupyter-scipy:v1.9.0

        ## the list of available container images in the dropdown
        options:
          - kubeflownotebookswg/jupyter-scipy:v1.9.0
          - kubeflownotebookswg/jupyter-pytorch-full:v1.9.0
          - kubeflownotebookswg/jupyter-pytorch-cuda-full:v1.9.0
          - kubeflownotebookswg/jupyter-tensorflow-full:v1.9.0
          - kubeflownotebookswg/jupyter-tensorflow-cuda-full:v1.9.0
          - elyra/kf-notebook:3.15.0
          - rocm/pytorch:latest
          - public.ecr.aws/kubeflow-on-aws/notebook-servers/jupyter-tensorflow:2.12.0-cpu-py310-ubuntu20.04-ec2-v1.0
          - public.ecr.aws/kubeflow-on-aws/notebook-servers/jupyter-tensorflow:2.12.0-gpu-py310-cu118-ubuntu20.04-ec2-v1.0
          - public.ecr.aws/kubeflow-on-aws/notebook-servers/jupyter-pytorch:2.0.0-gpu-py310-cu118-ubuntu20.04-ec2-v1.0
          - public.ecr.aws/kubeflow-on-aws/notebook-servers/jupyter-pytorch:2.0.0-cpu-py310-ubuntu20.04-ec2-v1.0

      ## VSCode-like Container Images (Group 1)
      ##  - the `imageGroupOne` section is used for "VSCode-like" apps that
      ##    expose themselves under the HTTP root path "/" and support path
      ##    rewriting without breaking
      ##  - the annotation `notebooks.kubeflow.org/http-rewrite-uri: "/"` is
      ##    set on Notebooks spawned by this group, to make Istio rewrite
      ##    the path of HTTP requests to the HTTP root
      ##
      imageGroupOne:
        ## the default container image
        value: kubeflownotebookswg/codeserver-python:v1.7.0

        ## the list of available container images in the dropdown
        options:
          - kubeflownotebookswg/codeserver-python:v1.7.0

      ## RStudio-like Container Images (Group 2)
      ##  - the `imageGroupTwo` section is used for "RStudio-like" apps whose
      ##    HTTP path is configured by the "X-RStudio-Root-Path" header
      ##  - the annotation `notebooks.kubeflow.org/http-rewrite-uri: "/"` is
      ##    set on Notebooks spawned by this group, to make Istio rewrite
      ##    the path of HTTP requests to the HTTP root
      ##  - the annotation `notebooks.kubeflow.org/http-headers-request-set` is
      ##    set on Notebooks spawned by this group, such that Istio injects the
      ##    "X-RStudio-Root-Path" header to all request
      ##
      imageGroupTwo:
        ## the default container image
        value: kubeflownotebookswg/rstudio-tidyverse:v1.7.0

        ## the list of available container images in the dropdown
        options:
          - kubeflownotebookswg/rstudio-tidyverse:v1.7.0

      ## CPU Resources
      ##
      cpu:
        readOnly: false

        ## the default cpu request for the container
        value: "0.5"

        ## a factor by which to multiply the CPU request calculate the cpu limit
        ## (to disable cpu limits, set as "none")
        limitFactor: "1.2"

      ## Memory Resources
      ##
      memory:
        readOnly: false

        ## the default memory request for the container
        value: "1.0Gi"

        ## a factor by which to multiply the memory request calculate the memory limit
        ## (to disable memory limits, set as "none")
        limitFactor: "1.2"

      ## GPU/Device-Plugin Resources
      ##
      gpus:
        readOnly: false

        ## configs for gpu/device-plugin limits of the container
        ## https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/#using-device-plugins
        value:
          ## the `limitKey` of the default vendor
          ## (to have no default, set as "")
          #vendor: ""

          ## the list of available vendors in the dropdown
          ##  `limitsKey` - what will be set as the actual limit
          ##  `uiName` - what will be displayed in the dropdown UI
          #vendors: []
          vendors:
            - limitsKey: "aws.amazon.com/neuron"
              uiName: "NEURON"
            - limitsKey: "nvidia.com/gpu"
              uiName: "NVIDIA"
            - limitsKey: "amd.com/gpu"
              uiName: "AMD"

          ## the default value of the limit
          ## (possible values: "none", "1", "2", "4", "8")
          num: "none"

      ## Workspace Volumes
      ##
      workspaceVolume:
        readOnly: false

        ## the default workspace volume to be created and mounted
        ## (to have no default, set `value: null`)
        value:
          mount: /home/jovyan

          ## pvc configs for creating new workspace volumes
          ## https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#persistentvolumeclaim-v1-core
          newPvc:
            metadata:
              ## "{notebook-name}" is replaced with the Notebook name
              name: "{notebook-name}-workspace"
            spec:
              #storageClassName: my-storage-class
              resources:
                requests:
                  storage: 5Gi
              accessModes:
                - ReadWriteOnce

      ## Data Volumes
      ##
      dataVolumes:
        readOnly: false

        ## a list of additional data volumes to be created and/or mounted
        value: []
        #value:
        #  - mount: /home/jovyan/datavol-1
        #    newPvc:
        #      metadata:
        #        name: "{notebook-name}-datavol-1"
        #      spec:
        #        resources:
        #          requests:
        #            storage: 5Gi
        #        accessModes:
        #          - ReadWriteOnce
        #  - mount: /home/jovyan/datavol-1
        #    existingSource:
        #      persistentVolumeClaim:
        #        claimName: "test-pvc"

      ## Affinity
      ##
      affinityConfig:
        readOnly: false

        ## the `configKey` of the default affinity config
        ## (to have no default, set as "")
        ## (if `readOnly`, the default `value` will be the only accessible option)
        value: "amd.com/gpu"

        ## the list of available affinity configs in the dropdown
        options: []

      ## Tolerations
      ##
      tolerationGroup:
        readOnly: false

        ## the `groupKey` of the default toleration group
        ## (to have no default, set as "")
        ## (if `readOnly`, the default `value` will be the only accessible option)
        value: ""

        ## the list of available toleration groups in the dropdown
        options: []

      ## Shared Memory
      ##
      shm:
        readOnly: false

        ## the default state of the "Enable Shared Memory" toggle
        value: true

      ## PodDefaults
      ##
      configurations:
        readOnly: false

        ## the list of PodDefault names that are selected by default
        ## (take care to ensure these PodDefaults exist in Profile Namespaces)
        value: []
        #value:
        #  - my-pod-default

    ## notebook template override
    ##  - a ~string~ to replace the default jupyter-web-app `notebook_template.yaml` with
    ##    https://github.com/kubeflow/kubeflow/blob/v1.7.0/components/crud-web-apps/jupyter/backend/apps/common/yaml/notebook_template.yaml
    ##  - can include deployKF templates `{{< ... >}}`
    ##
    notebookTemplate: ""

    ## spawner icon overrides
    ##
    spawnerIcons:
      ## image group one
      ##  - by default, "group one" has the "Visual Studio Code" icon
      ##  - images must be ~strings~ in SVG format
      ##
      imageGroupOne:
        icon: ""
        logo: ""

      ## image group two
      ##  - by default, "group two" has the "RStudio Server" icon
      ##  - images must be ~strings~ in SVG format
      ##
      imageGroupTwo:
        icon: ""
        logo: ""

    ## notebook culling configs
    ##  - https://github.com/kubeflow/kubeflow/blob/master/components/proposals/20220121-jupyter-notebook-idleness.md
    ##
    notebookCulling:
      ## sets `ENABLE_CULLING` environment variable in notebook-controller
      enabled: true

      ## sets `CULL_IDLE_TIME` environment variable in notebook-controller (in minutes)
      idleTime: 1440

      ## sets `IDLENESS_CHECK_PERIOD` environment variable in notebook-controller (in minutes)
      idlenessCheckPeriod: 1


  ## --------------------------------------
  ##               pipelines
  ## --------------------------------------
  pipelines:
    enabled: true
    images:

      kfpApiServer:
        repository: gcr.io/ml-pipeline/api-server
        tag: 2.0.0-alpha.7

      kfpPersistenceagent:
        repository: gcr.io/ml-pipeline/persistenceagent
        tag: 2.0.0-alpha.7

      kfpFrontend:
        repository: gcr.io/ml-pipeline/frontend
        tag: 2.0.0-alpha.7

    namespace: kubeflow-argo-workflows
    serviceAccounts:
      apiServer:
        annotations:
          eks.amazonaws.com/role-arn: "arn:aws:iam::131485263174:role/kubeflow-pipelines-backend"
      frontend:
        annotations:
          eks.amazonaws.com/role-arn: "arn:aws:iam::131485263174:role/kubeflow-pipelines-backend"

    ## storage bucket configs
    ##
    bucket:
      name: eks-deploykf-kf-artifact-store
      region: "ca-central-1"

    ## object store configs
    ##  - if `useExternal` is true, pipelines will use the specified external object store
    ##  - if `useExternal` is false, pipelines will use the embedded `deploykf_opt.deploykf_minio` object store,
    ##    and all other configs will be ignored
    ##
    objectStore:
      useExternal: true
      host: s3.ca-central-1.amazonaws.com
      # port: ""
      useSSL: true

      ## object store auth configs
      ##  - https://www.deploykf.org/guides/external/object-store/#connect-an-external-object-store
      ##
      auth:
        fromEnv: true

    ## mysql connection configs
    ##  - if `useExternal` is true, pipelines will use the specified external mysql database
    ##  - if `useExternal` is false, pipelines will use the embedded `deploykf_opt.deploykf_mysql` database,
    ##    and all other configs will be ignored
    ##
    mysql:
      useExternal: false

    ## mysql database names
    ##
    mysqlDatabases:
      cacheDatabase: kfp_cache
      metadataDatabase: kfp_metadata
      pipelinesDatabase: kfp_pipelines

    ## profile resource generation configs
    ##
    profileResourceGeneration:

      ## if a PodDefault named "kubeflow-pipelines-api-token" should be generated in each profile namespace
      ##  - the generated PodDefault will mount a serviceAccountToken volume which can be used to authenticate
      ##    with the Kubeflow Pipelines API on Pods which have a `kubeflow-pipelines-api-token` label with value "true"
      ##  - for more information, see the "Full Kubeflow n(from inside cluster)" section of the following page:
      ##    https://www.kubeflow.org/docs/components/pipelines/v1/sdk/connect-api/
      ##  - the PodDefault will NOT be generated if `kubeflow_tools.poddefaults_webhook.enabled` is false,
      ##    regardless of this setting
      ##
      kfpApiTokenPodDefault: true


  ## --------------------------------------
  ##          poddefaults-webhook
  ## --------------------------------------
  poddefaults_webhook:
    enabled: true


  ## --------------------------------------
  ##             tensorboards
  ## --------------------------------------
  tensorboards:
    enabled: true


  ## --------------------------------------
  ##           training-operator
  ## --------------------------------------
  training_operator:
    enabled: true


  ## --------------------------------------
  ##                volumes
  ## --------------------------------------
  volumes:
    enabled: true
